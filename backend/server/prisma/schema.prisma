datasource mongo {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  branch             Branch?             @relation(fields: [branchId], references: [id])
  branchId           String?
  createdAt          DateTime            @default(now())
  email              String              @unique
  eventRegistrations EventRegistration[]
  firstName          String?
  gender             EnumUserGender[]
  id                 String              @id @default(auto()) @map("_id") @mongo.ObjectId
  lastName           String?
  password           String
  profilePath        String?
  roles              Json
  updatedAt          DateTime            @updatedAt
  username           String              @unique
  usn                String              @unique
}

model Branch {
  associationName String?
  createdAt       DateTime @default(now())
  events          Event[]
  id              String   @id @default(auto()) @map("_id") @mongo.ObjectId
  img             String?
  name            String
  updatedAt       DateTime @updatedAt
  users           User[]
}

model Event {
  attendanceCode      String?
  branch              Branch              @relation(fields: [branchId], references: [id])
  branchId            String
  category            Category?           @relation(fields: [categoryId], references: [id])
  categoryId          String?
  createdAt           DateTime            @default(now())
  description         String?
  endDate             DateTime?
  eventRegistrations  EventRegistration[]
  eventType           EnumEventEventType?
  id                  String              @id @default(auto()) @map("_id") @mongo.ObjectId
  img                 String?
  registrationEndDate DateTime?
  startDate           DateTime?
  title               String?
  updatedAt           DateTime            @updatedAt
  venue               String?
}

model EventRegistration {
  createdAt   DateTime @default(now())
  event       Event    @relation(fields: [eventId], references: [id])
  eventId     String
  feedback    String?
  id          String   @id @default(auto()) @map("_id") @mongo.ObjectId
  isAttended  Boolean?
  teamMembers String?
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}

model Category {
  createdAt DateTime @default(now())
  events    Event[]
  id        String   @id @default(auto()) @map("_id") @mongo.ObjectId
  name      String
  updatedAt DateTime @updatedAt
}

enum EnumUserGender {
  Male
  Female
}

enum EnumEventEventType {
  Individual
  Team
}
